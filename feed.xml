<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ray ZZ</title>
    <description>Your destination for solving hyper-dimensional Rubik's Cubes, experimenting with microtonality, and stalking my course plans. Also, I don't even know ZZ.
</description>
    <link>http://www.rayzz.me//</link>
    <atom:link href="http://www.rayzz.me//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 12 Jun 2017 22:43:27 -0400</pubDate>
    <lastBuildDate>Mon, 12 Jun 2017 22:43:27 -0400</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>[Math] Lotto 6/49 Odds Represented By Dice Rolls</title>
        <description>&lt;p&gt;The Lotto 6/49 is a Canadian lottery game where you get to choose 6 of 49 numbers for 3 dollars, and have a chance at winning millions. Now, the chance of choosing all six numbers correctly is 1 in (49 choose 6), or 1 in approximately 13 million, which already sounds low, but is hard to imagine. Hence, it’s easy to forget how small of a chance you really have at this game.&lt;/p&gt;

&lt;p&gt;Thus, here’s a Haskell program fragment that puts things into perspective by first calculating the number of coin tosses that you would need to guess correctly in a row such that the chance of doing so is as low or even lower than winning the lottery…
&lt;!-- MORE --&gt;
Then, it gives the same for six-sided dice rolls, and twenty-sided dice rolls respectively. As a bonus, it also considers the equivalents to choosing 4 out of 6 numbers correctly, which still gives you a few thousand dollars as a reward.&lt;/p&gt;

&lt;p&gt;Note I left out the main method since it just prints out a bunch of stats that you’ll see later anyway. Also, the recursive choose method is comfy.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kr&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;choose&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;choose&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Invalid param&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choose&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choose&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;ceil_log&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;ceil_log&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Invalid param&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceiling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logBase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;And the output?&lt;/p&gt;

&lt;pre&gt;
You need to correctly guess 24 coin tosses  
OR 10 6-sided dice rolls  
OR 6 20-sided dice rolls to win the 6/49 lottery.  
  
You need to correctly guess 18 coin tosses  
OR 7 6-sided dice rolls  
OR 5 20-sided dice rolls to win the 4/49 lottery.  

Good Luck!

&lt;/pre&gt;

&lt;p&gt;Ok sure, but what if one or more of these numbers are overestimated by several degrees of magnitude, especially since we always round up the number of coin flips or dice rolls to make them integers? Well, there’s only one way to find out. Let’s add a function that calculates how off an estimate is, and get the main method to print some new numbers.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;get_magnitudes_off&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;get_magnitudes_off&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_num&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Invalid params&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logBase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;And the new output is:&lt;/p&gt;

&lt;pre&gt;
Lotto 6/49 estimation results for 6 numbers:
Coin flips: 12.643154 magnitudes off.
Six-sided die rolls: 1.5726068 magnitudes off.
20-sided die rolls: 1.5138803 magnitudes off.

Lotto 6/49 estimation results for 4 numbers:
Coin flips: 10.815703 magnitudes off.
Six-sided die rolls: 8.266034 magnitudes off.
20-sided die rolls: 0.8481274 magnitudes off.

&lt;/pre&gt;

&lt;h3 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h3&gt;

&lt;p&gt;Do NOT use coin flips to estimate your chances at winning four or six numbers of Lotto 6-49 for you’ll be at least ten orders of magnitude off. This means your estimated probability at winning the lottery is at least 10 billion times smaller than the actual probability.&lt;/p&gt;

&lt;p&gt;Do use 20-sided dice to estimate your chances at winning four or six numbers of Lotto 6-49 for you’ll be at most just two orders of magnitude off.&lt;/p&gt;

&lt;p&gt;Thus, remember that if you can often guess five or six rolls of a 20-sided die correctly in a row, you can win the Lotto.&lt;/p&gt;

&lt;p&gt;For people who are only familiar with cubic six-sided dice,&lt;br /&gt;
&lt;strong&gt;If you can often guess 10 rolls of the 6-sided die correctly in a row (I doubt it), you can win the jackpot&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Have fun playing now that you know this, and see you next time when we find out how long it should take to learn French according to the Foreign Service Institute, and how the Ontario Core French curriculum does in comparison!&lt;/p&gt;

</description>
        <pubDate>Wed, 31 May 2017 00:00:00 -0400</pubDate>
        <link>http://www.rayzz.me//math/2017/05/31/lottery-dice.html</link>
        <guid isPermaLink="true">http://www.rayzz.me//math/2017/05/31/lottery-dice.html</guid>
        
        
        <category>math</category>
        
      </item>
    
      <item>
        <title>[Cubing] Largest Comfortable Cube Size</title>
        <description>&lt;p&gt;I am considering buying a gigaminx partly out of boredom and partly
for the purpose of having something to turn for half an hour straight
when there’s nothing else to do, such as when waiting for MiWay buses.&lt;/p&gt;

&lt;p&gt;For reference, here is how the gigaminx looks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.shopify.com/s/files/1/0169/0924/products/Shengshou_Gigaminx_White02_1024x1024.jpg?v=1452828270&quot; alt=&quot;picture of a white gigaminx from cubedepotusa&quot; width=&quot;200px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But, being the picky cuber I am, I state that &lt;strong&gt;I will only buy the gigaminx if it contains fewer cubies than the 9x9x9 Rubik’s Cube&lt;/strong&gt;. This is because I’m OK with solving a 9x9x9, but anything above really gets tiring. Thus, let’s first calculate the number of cubies in a 9x9x9:
&lt;!-- MORE --&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are 8 vertices so we have at least 8 cubies&lt;/li&gt;
  &lt;li&gt;There are 12 edges each with 7 cubies so that gives us 84 more cubies&lt;/li&gt;
  &lt;li&gt;There are 6 centers each with 7*7 = 49 cubies so we add on 294 more cubies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus, we have a total of 386 cubies.&lt;/p&gt;

&lt;p&gt;Now, let’s calculate the number of cubies in a gigaminx:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are 20 vertices so we have at least 20 cubies&lt;/li&gt;
  &lt;li&gt;There are 30 edges each with 3 cubies so that gives us 90 more cubies&lt;/li&gt;
  &lt;li&gt;There are 12 centers each with 11 cubies so that gives us 132 more cubies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus, we have a total of &lt;em&gt;just&lt;/em&gt; 242 cubies. Now I actually want a gigaminx.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But&lt;/strong&gt;, what really interests me more than the gigaminx itself would have to be the following question:&lt;/p&gt;

&lt;div class=&quot;focus&quot;&gt;
  &lt;p&gt;For some integer m &amp;gt;= 2, what is the smallest nxnxn Rubik’s cube such that the number of cubies it contains is greater than the number of cubies the mxmxm megaminx contains?&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Counting the number of cubies the Rubik’s cube contains is not hard – if you think about it as a subtraction problem rather than an addition problem, it’s just n^3 - (n-2)^3 for an nxnxn Rubik’s cube. But, we can simplify it by factoring it as (n-(n-2))(n^2 + n(n-2) + (n-2)^2) = 2(n^2 + n^2 - 2n + n^2 - 4n + 4) = 2(3n^2 - 6n + 4) = 6n^2 - 12n + 8, not bad.&lt;/p&gt;

&lt;p&gt;But, the real question is the number of cubies the mxmxm megaminx contains. We know that there are at least 20 cubies since there are 20 vertices, and we know that there are 30(m-2) edge pieces, so we have a total of at least 20 + 30(m-2) cubies, but it’s the centers that are interesting.&lt;/p&gt;

&lt;p&gt;We consider two cases: m is odd, or m is even.&lt;/p&gt;

&lt;p&gt;If m is odd, we have the megaminx, gigaminx, teraminx, etc. In these cases, the puzzle contains fixed centers, and T-centers exist. The number of cubies
&lt;em&gt;per center&lt;/em&gt; is then 1 + 5(m-3)/2 + 5((m-3)/2)^2, so we have a total of
20 + 30(m-2) + [12 + 30(m-3) + 15(m-3)^2] = 20 + 30m - 60 + 12 + 30m - 90 + 15m^2 - 90m + 135 = 15m^2 - 30m + 17 cubies.&lt;/p&gt;

&lt;p&gt;If m is even, we have the kilominx, master kilominx, and I’m not sure what the 6x6x6 minx is called. Anyway, the number of cubies &lt;em&gt;per center&lt;/em&gt; for those is 5((m-2)/2)^2, so we have a total of 20 + 30(m-2) + 15(m-2)^2 = 20 + 30m - 60 + 15m^2 - 60m + 60 = 15m^2 - 30m + 20 cubies.&lt;/p&gt;

&lt;p&gt;This might seem to suggest that the master kilominx has more cubies than the gigaminx, but remember that for the master kilominx, m = 4 so we have 140 cubies, whereas for the gigaminx we must plug in m = 5 to obtain 242 cubies.&lt;/p&gt;

&lt;p&gt;Now comes the inequality, 6n^2-12n+8 &amp;gt; 15m^2-30m+17 for m odd or 6n^2-12n+8 &amp;gt; 15m^2-30m+20 for m even, n &amp;gt; m, m &amp;gt;= 2. We want to find the smallest n for some given m that satisfies these conditions. Since I am too lazy to solve this by hand, I wrote a small Clojure program that solves this for m from 2 to 15 for me. Note that the 15x15x15 minx is the yottaminx, and yotta is the largest prefix on the SI scale so I’m not going to consider any larger sizes.&lt;/p&gt;

&lt;h3 id=&quot;the-program&quot;&gt;The program&lt;/h3&gt;

&lt;p&gt;Note: I’m transferring over to Clojure from Racket and so I don’t know how to use all its idioms yet. Sorry for any eyesores.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;ns &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cube-mega-bounds.core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;min-mega-size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;min-cube-size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;max-mega-size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;;; We have to assume that n is never already way over&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;defn &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;-find-first-n-over&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;upper-bound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&amp;lt;= &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;upper-bound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-find-first-n-over&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inc &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;upper-bound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;defn &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;solve-ineq&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;min-n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;num-mega-cubies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-find-first-n-over&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;min-n&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;num-mega-cubies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;defn &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;solve-cube-ineq&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;+ &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zero? &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
                   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;+ &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;+ &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m-values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;min-mega-size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inc &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;max-mega-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;solve-ineq&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;min-cube-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;m-values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;defn &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pretty-print&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;counters&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;min-mega-size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inc &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;max-mega-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;doseq &lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map list &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;counters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Megaminx of size %dx%dx%d has fewer cubies &amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;than a cube of size %dx%dx%d.\n&amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;defn &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;-main&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;solve-cube-ineq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pretty-print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;the-results&quot;&gt;The results&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Megaminx of size 2x2x2 has fewer cubies than a cube of size 3x3x3.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 3x3x3 has fewer cubies than a cube of size 5x5x5.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 4x4x4 has fewer cubies than a cube of size 6x6x6.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 5x5x5 has fewer cubies than a cube of size 8x8x8.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 6x6x6 has fewer cubies than a cube of size 9x9x9.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 7x7x7 has fewer cubies than a cube of size 11x11x11.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 8x8x8 has fewer cubies than a cube of size 13x13x13.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 9x9x9 has fewer cubies than a cube of size 14x14x14.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 10x10x10 has fewer cubies than a cube of size 16x16x16.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 11x11x11 has fewer cubies than a cube of size 17x17x17.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 12x12x12 has fewer cubies than a cube of size 19x19x19.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 13x13x13 has fewer cubies than a cube of size 20x20x20.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 14x14x14 has fewer cubies than a cube of size 22x22x22.&lt;/li&gt;
  &lt;li&gt;Megaminx of size 15x15x15 has fewer cubies than a cube of size 24x24x24.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;So, not only does the gigaminx have fewer pieces than the 9x9x9 Rubik’s cube, but the 6x6x6 minx &lt;em&gt;also&lt;/em&gt; has fewer pieces than the 9x9x9 Rubik’s cube. Doesn’t mean I’ll buy the latter, though.&lt;/p&gt;

&lt;p&gt;See you next time when we find out how many coin flips or rolls of a single 6-sided die you’ll have to guess correctly to win the lottery.&lt;/p&gt;

</description>
        <pubDate>Fri, 26 May 2017 00:00:00 -0400</pubDate>
        <link>http://www.rayzz.me//cubing/2017/05/26/largest-comfortable-cube-size.html</link>
        <guid isPermaLink="true">http://www.rayzz.me//cubing/2017/05/26/largest-comfortable-cube-size.html</guid>
        
        
        <category>cubing</category>
        
      </item>
    
  </channel>
</rss>
